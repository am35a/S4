@use "sass:math"

$sizingLocations: none, both, horizontal, vertical
$defaultSizingStep: 25
$defaultAspectRatio: (1 1, 4 3, 3 4, 16 9, 9 16, 16 10, 10 16, 21 9, 9 21, 32 9, 9 32)

/*
    sizing section: width, height, aspect-ratio, box-sizing and resize types contained in classes

@mixin _sizing($orientation, $type)

    .#{$orientation}#{$type}mw
        min-width: var(--mw, auto) !important
        @for $i from 0 through math.div(100, $defaultSizingStep)
            &-#{$i * $defaultSizingStep}
                min-width: #{$i * $defaultSizingStep + '%'} !important
        &-fit
            min-width: fit-content !important
        &-min
            min-width: min-content !important
        &-max
            min-width: max-content !important
    .#{$orientation}#{$type}w
        width: var(--w, auto) !important
        @for $i from 0 through math.div(100, $defaultSizingStep)
            &-#{$i * $defaultSizingStep}
                width: #{$i * $defaultSizingStep + '%'} !important
        &-fit
            width: fit-content !important
        &-min
            width: min-content !important
        &-max
            width: max-content !important
    .#{$orientation}#{$type}wm
        max-width: var(--wm, auto) !important
        @for $i from 0 through math.div(100, $defaultSizingStep)
            &-#{$i * $defaultSizingStep}
                max-width: #{$i * $defaultSizingStep + '%'} !important
        &-fit
            max-width: fit-content !important
        &-min
            max-width: min-content !important
        &-max
            max-width: max-content !important

    .#{$orientation}#{$type}mh
        min-height: var(--mh, auto) !important
        @for $i from 0 through math.div(100, $defaultSizingStep)
            &-#{$i * $defaultSizingStep}
                min-height: #{$i * $defaultSizingStep + '%'} !important
        &-fit
            min-height: fit-content !important
        &-min
            min-height: min-content !important
        &-max
            min-height: max-content !important
    .#{$orientation}#{$type}h
        height: var(--h, auto) !important
        @for $i from 0 through math.div(100, $defaultSizingStep)
            &-#{$i * $defaultSizingStep}
                height: #{$i * $defaultSizingStep + '%'} !important
        &-fit
            height: fit-content !important
        &-min
            height: min-content !important
        &-max
            height: max-content !important
    .#{$orientation}#{$type}hm
        max-height: var(--hm, auto) !important
        @for $i from 0 through math.div(100, $defaultSizingStep)
            &-#{$i * $defaultSizingStep}
                max-height: #{$i * $defaultSizingStep + '%'} !important
        &-fit
            max-height: fit-content !important
        &-min
            max-height: min-content !important
        &-max
            max-height: max-content !important
    
    .#{$orientation}#{$type}rs
        @each $item in $sizingLocations
            &-#{$item}
                resize: #{$item} !important

    .#{$orientation}#{$type}ar
        @each $v, $h in $defaultAspectRatio
            &-#{$v}#{'_'}#{$h}
                aspect-ratio: #{$v + '/' + $h}
        &-auto
            aspect-ratio: auto
    
.bs-border
    box-sizing: border-box !important
.bs-content
    box-sizing: content-box !important
