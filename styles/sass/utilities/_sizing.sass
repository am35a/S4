@use "sass:math"

$resizingDirection: both, horizontal, vertical, none
$defaultSizingStep: 25
$defaultAspectRatio: (1 1, 4 3, 3 4, 16 9, 9 16, 16 10, 10 16, 21 9, 9 21, 32 9, 9 32)

/*
    sizing section: width, height, aspect-ratio, box-sizing and resize types contained in classes

@mixin _sizing($orientation, $type)
    .#{$orientation}#{$type}min-width
        @for $i from 0 through math.div(100, $defaultSizingStep)
            &--#{$i * $defaultSizingStep}
                min-width: #{$i * $defaultSizingStep + '%'} !important
        &--fit
            min-width: fit-content !important
        &--min
            min-width: min-content !important
        &--max
            min-width: max-content !important
    .#{$orientation}#{$type}width
        @for $i from 0 through math.div(100, $defaultSizingStep)
            &--#{$i * $defaultSizingStep}
                width: #{$i * $defaultSizingStep + '%'} !important
        &--fit
            width: fit-content !important
        &--min
            width: min-content !important
        &--max
            width: max-content !important
    .#{$orientation}#{$type}max-width
        @for $i from 0 through math.div(100, $defaultSizingStep)
            &--#{$i * $defaultSizingStep}
                max-width: #{$i * $defaultSizingStep + '%'} !important
        &--fit
            max-width: fit-content !important
        &--min
            max-width: min-content !important
        &--max
            max-width: max-content !important
    .min-width
        min-width: var(--#{$orientation}#{$type}min-width, var(--min-width, auto))
    .width
        width: var(--#{$orientation}#{$type}width, var(--width, auto))
    .max-width
        max-width: var(--#{$orientation}#{$type}max-width, var(--max-width, auto))

    .#{$orientation}#{$type}min-height
        @for $i from 0 through math.div(100, $defaultSizingStep)
            &--#{$i * $defaultSizingStep}
                min-height: #{$i * $defaultSizingStep + '%'} !important
        &--fit
            min-height: fit-content !important
        &--min
            min-height: min-content !important
        &--max
            min-height: max-content !important
    .#{$orientation}#{$type}height
        @for $i from 0 through math.div(100, $defaultSizingStep)
            &--#{$i * $defaultSizingStep}
                height: #{$i * $defaultSizingStep + '%'} !important
        &--fit
            height: fit-content !important
        &--min
            height: min-content !important
        &--max
            height: max-content !important
    .#{$orientation}#{$type}max-height
        @for $i from 0 through math.div(100, $defaultSizingStep)
            &--#{$i * $defaultSizingStep}
                max-height: #{$i * $defaultSizingStep + '%'} !important
        &--fit
            max-height: fit-content !important
        &--min
            max-height: min-content !important
        &--max
            max-height: max-content !important
    .min-height
        min-height: var(--#{$orientation}#{$type}min-height, var(--min-height, auto))
    .height
        height: var(--#{$orientation}#{$type}height, var(--height, auto))
    .max-height
        max-height: var(--#{$orientation}#{$type}max-height, var(--max-height, auto))

    .#{$orientation}#{$type}resize
        @each $item in $resizingDirection
            &--#{$item}
                resize: #{$item} !important

    .#{$orientation}#{$type}aspect-ratio
        @each $v, $h in $defaultAspectRatio
            &--#{$v}#{'_'}#{$h}
                aspect-ratio: #{$v + '/' + $h}
    .aspect-ratio
        aspect-ratio: var(--#{$orientation}#{$type}aspect-ratio, var(--aspect-ratio, initial))

    
.bs-border
    box-sizing: border-box !important
.bs-content
    box-sizing: content-box !important
